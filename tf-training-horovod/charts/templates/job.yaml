---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "horovod.fullname" . }}
  labels:
    app: {{ template "horovod.name" . }}
    chart: {{ template "horovod.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    role: master
    runName: {{ .Release.Name }}
spec:
  backoffLimit: 0
  template:
    metadata:
      labels:
        app: {{ template "horovod.name" . }}
        release: {{ .Release.Name }}
        role: master
        runName: {{ .Release.Name }}
      annotations:
        scheduling.k8s.io/group-name: {{ .Release.Name }}-podgroup
    spec:
      schedulerName: kube-batch
      {{- if .Values.useHostNetwork }}
      hostNetwork: {{ .Values.useHostNetwork }}
      dnsPolicy: ClusterFirstWithHostNet
      {{- end }}
      {{- if .Values.useHostPID }}
      hostPID: {{ .Values.useHostPID }}
      {{- end }}
      restartPolicy: Never
      volumes:
      - name: shared-data
        emptyDir: {}
      - name: {{ template "horovod.fullname" . }}-cm
        configMap:
          name: {{ template "horovod.fullname" . }}
          items:
          - key: hostfile.config
            path: hostfile
            mode: 438
          - key: master.waitWorkerReady
            path: waitWorkersReady.sh
            mode: 365
          - key: master.run
            path: run.sh
            mode: 365
          - key: master.kubectl
            path: kubectl.sh
            mode: 365
{{- if .Values.volumes }}
{{ toYaml .Values.volumes | indent  6 }}
{{- end }}
      containers:
      - name: horovod-master
        image: "{{ .Values.image.clusterRepository }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
          - name: SSHPORT
            value: "{{ .Values.ssh.port }}"
          - name: RUN_NAME
            value: "{{ .Release.Name }}"
         {{- if .Values.ssh.useSecrets }}
          - name: USESECRETS
            value: "{{ .Values.ssh.useSecrets }}"
         {{- end }}
          - name: REQUESTED_CPUS
            value: "{{ .Values.cpus }}"
{{- if .Values.master.env }}
{{ toYaml .Values.master.env | indent 10 }}
{{- end }}
{{- if .Values.master.privileged }}
        securityContext:
            privileged: true
{{- end }}
        ports:
        - containerPort: {{ .Values.ssh.port }}
        volumeMounts:
        - name: shared-data
          mountPath: /horovod/init
        - name: {{ template "horovod.fullname" . }}-cm
          mountPath: /horovod/generated
{{- if .Values.volumeMounts }}
{{ toYaml .Values.volumeMounts | indent 8 }}
{{- end }}
        - name: output-home
          mountPath: /mnt/output/experiment
          subPath: {{ .Release.Name }}
        command:
          - /horovod/generated/run.sh
        args:
          - >
            mpiexec --hostfile {{- if .Values.useHostNetwork }} /horovod/init/hostfile {{ else }} /horovod/generated/hostfile {{- end }}
            -cpus-per-proc {{ .Values.cpus }} --map-by socket --oversubscribe -n {{ .Values.workersCount | add 1 | mul .Values.processesPerNode }}
            {{- range .Values.master.env }} -x {{ .name }} {{- end }}
            --mca orte_keep_fqdn_hostnames t --allow-run-as-root --display-map --tag-output --timestamp-output
            {{- if and .Values.useHostNetwork .Values.hostNetworkInterface }} --mca btl_tcp_if_include {{ .Values.hostNetworkInterface }} {{ else }} --mca btl_tcp_if_exclude lo,docker0 {{- end }}
            sh -c 'python {{- range .Values.commandline.args }} {{ . }} {{- end }}'
{{- if .Values.master.args }}
{{ toYaml .Values.master.args | indent 10 }}
{{- end }}
        resources:
          requests:
            cpu: {{ default .Values.resources.requests.cpu .Values.cpu}}
            memory: {{ default .Values.resources.requests.memory .Values.memory }}
          limits:
            cpu: {{ default .Values.resources.limits.cpu .Values.cpu }}
            memory: {{ default .Values.resources.limits.memory .Values.memory }}
      - name: kubectl
        image: "127.0.0.1:{{ .Values.registryPort }}/nauta/kubectl:1.15.3"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
          - name: STS_NAME
            value: {{ template "horovod.fullname" . }}
          - name: RUN_NAME
            value: {{ .Release.Name }}
        volumeMounts:
          - name: shared-data
            mountPath: /horovod/init
          - name: {{ template "horovod.fullname" . }}-cm
            mountPath: /horovod/generated
        command:
          - /horovod/generated/kubectl.sh
{{- if .Values.ssh.useSecrets }}
      initContainers:
      - name: wait-workers
        image: "{{ .Values.image.clusterRepository }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
          - name: STS_NAME
            value: {{ template "horovod.fullname" . }}
          - name: SSHPORT
            value: "{{ .Values.ssh.port }}"
          {{- if .Values.ssh.useSecrets }}
          - name: USESECRETS
            value: "{{ .Values.ssh.useSecrets }}"
          {{- end }}
{{- if .Values.master.env }}
{{ toYaml .Values.master.env | indent 10 }}
{{- end }}
        command:
        - /horovod/generated/waitWorkersReady.sh
        args:
        - /horovod/generated/hostfile
        volumeMounts:
        - name: {{ template "horovod.fullname" . }}-cm
          mountPath: /horovod/generated
        - name: shared-data
          mountPath: /horovod/init
{{- end }}
